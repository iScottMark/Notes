(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{551:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("笔者根据自己对于 Git 的浅薄理解，简单地梳理总结 Git 常用的命令，方便自己之后复习，如有不对，还望指正。")]),t._v(" "),a("p",[t._v("笔者喜欢在学一样东西之前，先找找有没有这样的文章，它是站在方法论以及感性理解的角度上去剖析所学的事物；而学完过后，也更喜欢以这种方式进行总结。说白了，随着年龄的增长和越来越多知识的摄入，我愈发坚信『一切科学的尽头是哲学』这句话 —— 由浅入深，而后大道至简。")]),t._v(" "),a("h2",{attrs:{id:"提交历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交历史"}},[t._v("#")]),t._v(" 提交历史")]),t._v(" "),a("p",[t._v('Git 最核心的概念就是提交历史，我们可以狭义地认为就是 "commit_id"，几乎所有的 git 命令都是围绕它展开。每一次 commit，都是对于项目的一次快照，每次快照都是基于上一次快照的不同。')]),t._v(" "),a("p",[t._v("如果从时间维度上看，它是一条连贯的、不间断的记录。")]),t._v(" "),a("p",[t._v("因而，如果我们想穿梭未来或是回到过去，就得知道这个记录的名称，即 commit_id（或者与当前 commit_id 相对的位置），以下这 4 条命令就是干这些事儿的：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 commit_id")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 篡改历史")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset\n")])])]),a("h2",{attrs:{id:"分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[t._v("#")]),t._v(" 分支")]),t._v(" "),a("p",[t._v("基于提交历史，在 Git 中另一个很重要的概念便是分支。本质上，分支只不过是给某一段中的好多个 commit_id 穿了个马甲，使得在整个项目开发的周期里，我们能清晰地辨认在这段 commit_id 里需要做什么事情。")]),t._v(" "),a("p",[t._v('比如，我要做一个新特性，我就穿上名为 "feature" 的衣服；等新功能开发完全，我就可以换回之前一直穿的 "dev" 衣服；之后要在正式的场合公共场合出面 (产品正式版本发布)，我又要西装革履，换上 "master"。')]),t._v(" "),a("p",[t._v('每个人的衣品不一样，对待穿过的衣服的态度也大不相同。有的喜欢 『断舍离』，只留一套 "master"；而有的特别『念旧』，把穿过的每一件衣服都保留下来。')]),t._v(" "),a("p",[t._v("此外，我们总是能在新做的衣服上不断进步，改良新衣服的品质和特性，而后将这些特性合并到最终亮相于大众的那一套衣服之中，当然改良不仅包括增加衣服上的一些符号元素，也会删除丑陋怪异的部分。")]),t._v(" "),a("p",[t._v("最后，现实是，一件衣服，它会有很多设计师（程序猿）在一起设计，所以在最终合并之前不可避免地会出现一些审美设计上的冲突，我们得手动去解决它们。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建分支（做衣服）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换分支（换衣服）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" switch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并分支（改良衣服）")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick\n")])])]),a("h2",{attrs:{id:"文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件"}},[t._v("#")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" restore  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复工作区的文件")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看工作区和暂存区的文件状态")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除文件")]),t._v("\n")])])]),a("h2",{attrs:{id:"远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库"}},[t._v("#")]),t._v(" 远程仓库")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone \n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);